# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Run lint stage
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .devcontainer/Dockerfile
          target: lint
          cache-from: mcr.microsoft.com/vscode/devcontainers/python:3.8

  securityScan:
    name: Security Scan
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Run lint stage
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .devcontainer/Dockerfile
          target: scan
          cache-from: mcr.microsoft.com/vscode/devcontainers/python:3.8
#       - name: Lint
#         run: docker build --target lint -f .devcontainer/Dockerfile .

  build:
    name: Build Artifact
    needs: [lint, securityScan]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Create builder container
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .devcontainer/Dockerfile
          target: workspace
          tags: alz-workspace
          cache-from: mcr.microsoft.com/vscode/devcontainers/python:3.8
          push: false
          load: true
      - name: Build
        run: |
          docker run -d -v $GITHUB_WORKSPACE:/workspace alz-workspace make build
      - name: Archive build artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
          retention-days: 1

#   publish:
#     name: Publish
#     needs: build
#     runs-on: ubuntu-20.04
#     steps:
#       - name: Download build artifact
#         uses: actions/download-artifact@v2
#       - name: Move Makefile
#         run: |
#           mv dist/Makefile Makefile
#       - name: Set AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-region: us-east-1
#           aws-access-key-id: ${{ secrets.CICD_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.CICD_AWS_SECRET_ACCESS_KEY }}
#           role-to-assume: CICDServiceRole
#       - name: Publish release artifact
#         run: |
#           BUILD_ID=$(echo $GITHUB_SHA | head -c7)
#           BRANCH_ARR=($(echo "$GITHUB_REF" | tr '/' '\n'))
#           VERSION=$(echo "$BRANCH_ARR[4]")
#           ls -al dist
#           zip -r snapshot.zip dist/
#           aws s3 cp snapshot.zip s3://com.laudio.releases/infrastructure/aws-landing-zone/$VERSION-$BUILD_ID.zip
          
